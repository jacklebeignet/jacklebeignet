name: Update Current Project
on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:     # Allows manual triggering

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: jacklebeignet/jacklebeignet
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Find most recently updated repo
        id: find-repo
        run: |
          # Get most recently updated repo (excluding the profile README itself)
          MOST_RECENT_REPO=$(gh repo list jacklebeignet --limit 100 --json nameWithOwner,updatedAt --jq '.[] | select(.nameWithOwner != "jacklebeignet/jacklebeignet") | .nameWithOwner + "|" + .updatedAt' | sort -r -t '|' -k 2 | head -1 | cut -d'|' -f1)
          
          # Fallback to Nexus Hub if no other repos found
          MOST_RECENT_REPO=${MOST_RECENT_REPO:-jacklebeignet/scripts/NexusHub}
          
          echo "most_recent_repo=$MOST_RECENT_REPO" >> $GITHUB_OUTPUT
          REPO_NAME=$(echo "$MOST_RECENT_REPO" | cut -d'/' -f2)
          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          # Update the specific line while preserving formatting
          sed -i -E "s|(- ðŸ”­ I'm currently working on )\[.*\]\(.*\)|\1[${{ steps.find-repo.outputs.repo_name }}](https://github.com/${{ steps.find-repo.outputs.most_recent_repo }})|" README.md

          # Verify the change
          echo "Updated project to: ${{ steps.find-repo.outputs.repo_name }}"
          grep -A 2 "currently working on" README.md

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "ðŸ”„ Update current project to ${{ steps.find-repo.outputs.repo_name }}" || echo "No changes to commit"
          git push
